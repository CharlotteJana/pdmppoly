% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polypdmp_generator.R
\name{EVGenerator}
\alias{EVGenerator}
\title{Generator of m-th moment}
\usage{
EVGenerator(obj, m, j)
}
\arguments{
\item{obj}{object of class \code{\link{polyPdmpModel}}.}

\item{m}{integer vector whose length equals the number of continous
variables.}

\item{j}{integer giving the state of the discrete variable.}
}
\value{
a polynomial represented as \code{spray} object. This polynomial has
  more variables than \code{init(obj)} because the discrete variable \code{d}
  is replaced by different indicator variables \code{d1, ..., dk}, one for
  every possible state. See \code{\link{blowupSpray}} for more details.
}
\description{
Let Q be the \code{\link{generator}} of a PDMP. Method \code{EVGenerator}
computes the generator Q(f) where f is given as \deqn{f(i,z) = δ_{ji}\cdot
z^{m[1]}z^{m[2]} ... z^{m[k]}}{f(i,z) = δᵢⱼ*z₁ᵐ¹*...*zₙᵐⁿ } with a given
vector \code{m} and \code{j} being a fixed state of the discrete variable.
This method is needed to compute the expected value \eqn{\mathbb{E}(X_t^m | d
= j)}.
}
\note{
This method only works for one discrete variable.
}
\seealso{
\code{\link{polyGenerator}} to compute the generator and obtain the
  result as spray object with the same number of variables as
  \code{init(obj)}, \code{\link{generator}} to compute the generator and
  obtain the result as function.
}
